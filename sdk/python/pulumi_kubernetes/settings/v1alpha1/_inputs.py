# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Optional, Tuple, Union
from ... import _utilities, _tables
from ... import core as _core
from ... import meta as _meta

@pulumi.input_type
class PodPresetArgs:
    api_version: Optional[pulumi.Input[str]] = pulumi.input_property("apiVersion")
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[pulumi.Input[str]] = pulumi.input_property("kind")
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[pulumi.Input['_meta.v1.ObjectMetaArgs']] = pulumi.input_property("metadata")
    spec: Optional[pulumi.Input['PodPresetSpecArgs']] = pulumi.input_property("spec")

    # pylint: disable=no-self-argument
    def __init__(__self__, *, api_version: Optional[pulumi.Input[str]] = None, kind: Optional[pulumi.Input[str]] = None, metadata: Optional[pulumi.Input['_meta.v1.ObjectMetaArgs']] = None, spec: Optional[pulumi.Input['PodPresetSpecArgs']] = None) -> None:
        """
        PodPreset is a policy resource that defines additional runtime requirements for a Pod.
        :param pulumi.Input[str] api_version: APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
        :param pulumi.Input[str] kind: Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        """
        __self__.api_version = 'settings.k8s.io/v1alpha1'
        __self__.kind = 'PodPreset'
        __self__.metadata = metadata
        __self__.spec = spec

@pulumi.input_type
class PodPresetSpecArgs:
    env: Optional[pulumi.Input[List[pulumi.Input['_core.v1.EnvVarArgs']]]] = pulumi.input_property("env")
    """
    Env defines the collection of EnvVar to inject into containers.
    """
    env_from: Optional[pulumi.Input[List[pulumi.Input['_core.v1.EnvFromSourceArgs']]]] = pulumi.input_property("envFrom")
    """
    EnvFrom defines the collection of EnvFromSource to inject into containers.
    """
    selector: Optional[pulumi.Input['_meta.v1.LabelSelectorArgs']] = pulumi.input_property("selector")
    """
    Selector is a label query over a set of resources, in this case pods. Required.
    """
    volume_mounts: Optional[pulumi.Input[List[pulumi.Input['_core.v1.VolumeMountArgs']]]] = pulumi.input_property("volumeMounts")
    """
    VolumeMounts defines the collection of VolumeMount to inject into containers.
    """
    volumes: Optional[pulumi.Input[List[pulumi.Input['_core.v1.VolumeArgs']]]] = pulumi.input_property("volumes")
    """
    Volumes defines the collection of Volume to inject into the pod.
    """

    # pylint: disable=no-self-argument
    def __init__(__self__, *, env: Optional[pulumi.Input[List[pulumi.Input['_core.v1.EnvVarArgs']]]] = None, env_from: Optional[pulumi.Input[List[pulumi.Input['_core.v1.EnvFromSourceArgs']]]] = None, selector: Optional[pulumi.Input['_meta.v1.LabelSelectorArgs']] = None, volume_mounts: Optional[pulumi.Input[List[pulumi.Input['_core.v1.VolumeMountArgs']]]] = None, volumes: Optional[pulumi.Input[List[pulumi.Input['_core.v1.VolumeArgs']]]] = None) -> None:
        """
        PodPresetSpec is a description of a pod preset.
        :param pulumi.Input[List[pulumi.Input['_core.v1.EnvVarArgs']]] env: Env defines the collection of EnvVar to inject into containers.
        :param pulumi.Input[List[pulumi.Input['_core.v1.EnvFromSourceArgs']]] env_from: EnvFrom defines the collection of EnvFromSource to inject into containers.
        :param pulumi.Input['_meta.v1.LabelSelectorArgs'] selector: Selector is a label query over a set of resources, in this case pods. Required.
        :param pulumi.Input[List[pulumi.Input['_core.v1.VolumeMountArgs']]] volume_mounts: VolumeMounts defines the collection of VolumeMount to inject into containers.
        :param pulumi.Input[List[pulumi.Input['_core.v1.VolumeArgs']]] volumes: Volumes defines the collection of Volume to inject into the pod.
        """
        __self__.env = env
        __self__.env_from = env_from
        __self__.selector = selector
        __self__.volume_mounts = volume_mounts
        __self__.volumes = volumes

